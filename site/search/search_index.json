{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"E-commerce API HOST : https://e-context-279708.df.r.appspot.com Add credit card API URL : /card/ Method : POST Body request { \"email\": \"khanh26688@gmail.com\", \"card_number\": \"1234567891012345\", // must be 16 digits \"full_name\": \"Khanh\", \"expiry_date\": \"12/23\", \"ccv\": 686 //must be length of 3 } Success Response Code : 201 Created Content example { \"email\": \"khanh26688@gmail.com\", \"public_key\": \"SSTSjgyG0njbhIWLoTepDmwPJQtn6yMy\" } Error Responses Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"Details error wil be listed here\"} View credit card API URL : /card/<int:public_key> Method : GET Success Response Code : 200 Success Content example { \"public_key\": \"BDjqIuAhhR29ZZ8s1RwTtEwc2NP3zeVh\", \"card_details\": { \"full_name\": \"Khanh\", \"expiry_date\": \"12/23\", \"card_number\": \"1234567891012345\", \"ccv\": 686 } Error Responses Condition : If public key not found. Code : 404 Not found Content : {\"Error\": \"Public key does not match any record\"} Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"An error occur\"} Remove credit card API URL : /card/<int:public_key> Method : DELETE Success Response Code : 200 Success Content example {\"response\": \"Record is deleted successfully!\"} Error Responses Condition : If public key not found. Code : 404 Not found Content : {\"Error\": \"Public key does not match any record\"} Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"An error occur\"}","title":"Card Service"},{"location":"#e-commerce-api","text":"HOST : https://e-context-279708.df.r.appspot.com","title":"E-commerce API"},{"location":"#add-credit-card-api","text":"URL : /card/ Method : POST Body request { \"email\": \"khanh26688@gmail.com\", \"card_number\": \"1234567891012345\", // must be 16 digits \"full_name\": \"Khanh\", \"expiry_date\": \"12/23\", \"ccv\": 686 //must be length of 3 }","title":"Add credit card API"},{"location":"#success-response","text":"Code : 201 Created Content example { \"email\": \"khanh26688@gmail.com\", \"public_key\": \"SSTSjgyG0njbhIWLoTepDmwPJQtn6yMy\" }","title":"Success Response"},{"location":"#error-responses","text":"Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"Details error wil be listed here\"}","title":"Error Responses"},{"location":"#view-credit-card-api","text":"URL : /card/<int:public_key> Method : GET","title":"View credit card API"},{"location":"#success-response_1","text":"Code : 200 Success Content example { \"public_key\": \"BDjqIuAhhR29ZZ8s1RwTtEwc2NP3zeVh\", \"card_details\": { \"full_name\": \"Khanh\", \"expiry_date\": \"12/23\", \"card_number\": \"1234567891012345\", \"ccv\": 686 }","title":"Success Response"},{"location":"#error-responses_1","text":"Condition : If public key not found. Code : 404 Not found Content : {\"Error\": \"Public key does not match any record\"} Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"An error occur\"}","title":"Error Responses"},{"location":"#remove-credit-card-api","text":"URL : /card/<int:public_key> Method : DELETE","title":"Remove credit card API"},{"location":"#success-response_2","text":"Code : 200 Success Content example {\"response\": \"Record is deleted successfully!\"}","title":"Success Response"},{"location":"#error-responses_2","text":"Condition : If public key not found. Code : 404 Not found Content : {\"Error\": \"Public key does not match any record\"} Condition : If body content fields are not correct. Code : 400 Bad Request Content : {\"Error\": \"An error occur\"}","title":"Error Responses"},{"location":"authToken/","text":"E-commerce API When making a request to the Backend, always pass the user token in the Header's Authorization Field Sample : import firebase from \"firebase\"; firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) { axios.get(`http://127.0.0.1:8000/get_invoice/1`, { headers: { Authorization: idToken } }) .then(res => { console.log(res.data); }); }).catch(function(error) { // Handle error }); Error Responses Condition : If token is not passed or wrong token is passed Code : 401 Unauthorized","title":"Auth Token"},{"location":"authToken/#e-commerce-api","text":"","title":"E-commerce API"},{"location":"authToken/#when-making-a-request-to-the-backend-always-pass-the-user-token-in-the-headers-authorization-field","text":"Sample : import firebase from \"firebase\"; firebase.auth().currentUser.getIdToken(/* forceRefresh */ true).then(function(idToken) { axios.get(`http://127.0.0.1:8000/get_invoice/1`, { headers: { Authorization: idToken } }) .then(res => { console.log(res.data); }); }).catch(function(error) { // Handle error });","title":"When making a request to the Backend, always pass the user token in the Header's Authorization Field"},{"location":"authToken/#error-responses","text":"Condition : If token is not passed or wrong token is passed Code : 401 Unauthorized","title":"Error Responses"},{"location":"backend/","text":"First Header Second Header Third Header Content Cell Content Cell Content Cell Content Cell Content Cell Content Cell","title":"Backend"},{"location":"invoiceAPI/","text":"E-commerce API HOST : http:localhost:8000 Create invoice API URL : /create_invoice Method : POST Body request { \"seller_id\": 3, \"buyer_id\": 2, \"amount\": 4.30, \"description\": \"Clear Case 1\" } Success Response Code : HTTP 201 CREATED Content example { \"seller_id\":3, \"buyer_id\":2, \"amount\":4.3, \"description\":\"Clear Case 1\" } Error Responses Condition : If GET/PUT/DELETE request is performed instead of POST Code : 400 Bad Request Get invoice API URL : /get_invoice/:id Method : GET Success Response Code : HTTP 200 OK Content example { \"seller_id\":3, \"buyer_id\":2, \"amount\":4.3, \"description\":\"Clear Case 1\" } Error Responses Condition : If invoice ID is not found. Code : HTTP 404 Not Found Condition : If POST/PUT/DELETE request is performed instead of POST Code : 400 Bad Request","title":"Invoice API"},{"location":"invoiceAPI/#e-commerce-api","text":"HOST : http:localhost:8000","title":"E-commerce API"},{"location":"invoiceAPI/#create-invoice-api","text":"URL : /create_invoice Method : POST Body request { \"seller_id\": 3, \"buyer_id\": 2, \"amount\": 4.30, \"description\": \"Clear Case 1\" }","title":"Create invoice API"},{"location":"invoiceAPI/#success-response","text":"Code : HTTP 201 CREATED Content example { \"seller_id\":3, \"buyer_id\":2, \"amount\":4.3, \"description\":\"Clear Case 1\" }","title":"Success Response"},{"location":"invoiceAPI/#error-responses","text":"Condition : If GET/PUT/DELETE request is performed instead of POST Code : 400 Bad Request","title":"Error Responses"},{"location":"invoiceAPI/#get-invoice-api","text":"URL : /get_invoice/:id Method : GET","title":"Get invoice API"},{"location":"invoiceAPI/#success-response_1","text":"Code : HTTP 200 OK Content example { \"seller_id\":3, \"buyer_id\":2, \"amount\":4.3, \"description\":\"Clear Case 1\" }","title":"Success Response"},{"location":"invoiceAPI/#error-responses_1","text":"Condition : If invoice ID is not found. Code : HTTP 404 Not Found Condition : If POST/PUT/DELETE request is performed instead of POST Code : 400 Bad Request","title":"Error Responses"}]}